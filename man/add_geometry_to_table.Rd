% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_geometry_to_table.R
\name{add_geometry_to_table}
\alias{add_geometry_to_table}
\alias{add_geometry}
\title{Use an existing tibble as the basis for a spatial query}
\usage{
add_geometry_to_table(
  tbl,
  geometry = c("boundaries", "centroids"),
  lookup_level = NULL,
  geo_code_field = NULL,
  opts = boundr_options()
)

add_geometry(
  tbl,
  geometry = c("boundaries", "centroids"),
  lookup_level = NULL,
  geo_code_field = NULL,
  opts = boundr_options()
)
}
\arguments{
\item{tbl}{A tibble with a column for geographical codes. Table names ought
to be in lower case. This function will use the lefthand-most column ending
in 'cd' by default as the basis for retrieving boundary or point data.}

\item{geometry}{character. Two options: "boundaries" (the default) and
"centroids". By default, \code{bounds()} will return boundaries and \code{points()}
will return centroids.}

\item{lookup_level}{character. Lower level area code eg "lsoa", "wd", "lad".}

\item{geo_code_field}{character The column name from \code{tbl} for which you
wish to retrieve spatial data. By default, \code{add_geometry_to_table()} will
use the lefthand-most column that ends in "cd".}

\item{opts}{Should be set with the \code{boundr_options()} function. See
\code{?boundr_options} for detail on what can be set by the user, and on the
default values.}
}
\value{
If successful, will return the initial table with an additional
geometry column added. Duplicate rows will be removed.
}
\description{
If you have a tibble such as those produced by \code{lookup()} - that is, there is
a column of geographical ONS codes ending in 'cd' - simply use this table as
the basis for retrieving the relevant boundaries or centroids.
}
