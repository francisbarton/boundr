[{"path":"https://francisbarton.codeberg.page/boundr/docs/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Francis Barton. Author, maintainer.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Barton F (2024). boundr: Retrieve Area Boundaries Data ONS Open Geography Portal. R package version 0.3.99, https://francisbarton.github.io/boundr/, https://francisbarton.codeberg.page/boundr/docs, https://codeberg.org/francisbarton/boundr.","code":"@Manual{,   title = {boundr: Retrieve Area Boundaries and Data from the ONS Open Geography Portal},   author = {Francis Barton},   year = {2024},   note = {R package version 0.3.99, https://francisbarton.github.io/boundr/, https://francisbarton.codeberg.page/boundr/docs},   url = {https://codeberg.org/francisbarton/boundr}, }"},{"path":[]},{"path":"https://francisbarton.codeberg.page/boundr/docs/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to jogger","title":"Contributing to jogger","text":"outlines propose change jogger. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to jogger","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to jogger","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to jogger","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to jogger","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to jogger","text":"Please note jogger project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":[]},{"path":"https://francisbarton.codeberg.page/boundr/docs/index.html","id":"retrieve-area-boundaries-and-data-from-the-ons-open-geography-portal","dir":"","previous_headings":"","what":"Retrieve area boundaries and data from the ONS Open Geography Portal","title":"Retrieve Area Boundaries and Data from the ONS Open Geography Portal","text":"main purpose package download area lookups boundaries R tables, using ONS Open Geography API, areas specified level within specified area. main script bounds() return data frame sub-area geometry column, sf object ready visualised map.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Retrieve Area Boundaries and Data from the ONS Open Geography Portal","text":"can install package R console entering remotes::install_git(“https://codeberg.org/francisbarton/boundr”) remotes package installed.","code":""},{"path":[]},{"path":"https://francisbarton.codeberg.page/boundr/docs/index.html","id":"basic-lookup-of-areas-within-a-larger-area-by-name","dir":"","previous_headings":"Examples","what":"Basic lookup of areas within a larger area, by name","title":"Retrieve Area Boundaries and Data from the ONS Open Geography Portal","text":"Returns sfc tibble latest available data","code":"bounds(\"msoa\", \"lad\", \"Swansea\") Simple feature collection with 30 features and 7 fields Geometry type: MULTIPOLYGON Dimension:     XY Bounding box:  xmin: -4.333587 ymin: 51.53577 xmax: -3.842747 ymax: 51.77423 Geodetic CRS:  WGS 84 # A tibble: 30 × 8    msoa21cd  msoa21nm    lad24cd   lad24nm msoa21nmw    msoa21hclnm msoa21hclnmw    <chr>     <chr>       <chr>     <chr>   <chr>        <chr>       <chr>         1 W02000168 Swansea 001 W06000011 Swansea Abertawe 001 Pontarddul… Pontarddula…  2 W02000169 Swansea 002 W06000011 Swansea Abertawe 002 Clydach & … Clydach a M…  3 W02000170 Swansea 003 W06000011 Swansea Abertawe 003 Morriston … Gogledd Tre…  4 W02000171 Swansea 004 W06000011 Swansea Abertawe 004 Llangyfela… Llangyfelac…  5 W02000172 Swansea 005 W06000011 Swansea Abertawe 005 Gorseinon   Gorseinon     6 W02000173 Swansea 006 W06000011 Swansea Abertawe 006 Birchgrove  Gellifedw     7 W02000174 Swansea 007 W06000011 Swansea Abertawe 007 Loughor     Casllwchwr    8 W02000175 Swansea 008 W06000011 Swansea Abertawe 008 Morriston … De Treforys   9 W02000176 Swansea 009 W06000011 Swansea Abertawe 009 Mynydd-bach Mynydd-bach  10 W02000177 Swansea 010 W06000011 Swansea Abertawe 010 Llansamlet  Llansamlet   # ℹ 20 more rows # ℹ 1 more variable: geometry <MULTIPOLYGON [°]>"},{"path":"https://francisbarton.codeberg.page/boundr/docs/index.html","id":"lookup-areas-with-older-dates","dir":"","previous_headings":"Examples","what":"Lookup areas with older dates","title":"Retrieve Area Boundaries and Data from the ONS Open Geography Portal","text":"Trial error may required - start looking available OpenGeography site.","code":"bounds(\"wd\", \"lad\", \"Shepway\", within_year = 2016) # Shepway no longer exists Simple feature collection with 13 features and 4 fields Geometry type: POLYGON Dimension:     XY Bounding box:  xmin: 0.7768709 ymin: 50.91048 xmax: 1.221268 ymax: 51.205 Geodetic CRS:  WGS 84 # A tibble: 13 × 5    wd16cd    wd16nm                    lad16cd lad16nm                  geometry    <chr>     <chr>                     <chr>   <chr>               <POLYGON [°]>  1 E05010015 Broadmead                 E07000… Shepway ((1.155543 51.08448, 1.1…  2 E05010016 Cheriton                  E07000… Shepway ((1.159752 51.10128, 1.1…  3 E05010017 East Folkestone           E07000… Shepway ((1.184824 51.09986, 1.1…  4 E05010018 Folkestone Central        E07000… Shepway ((1.177906 51.07553, 1.1…  5 E05010019 Folkestone Harbour        E07000… Shepway ((1.184824 51.09986, 1.1…  6 E05010020 Hythe                     E07000… Shepway ((1.119319 51.08961, 1.1…  7 E05010021 Hythe Rural               E07000… Shepway ((1.036358 51.08556, 1.0…  8 E05010022 New Romney                E07000… Shepway ((0.9804397 51.00251, 0.…  9 E05010023 North Downs East          E07000… Shepway ((1.147638 51.17718, 1.1… 10 E05010024 North Downs West          E07000… Shepway ((1.097309 51.18892, 1.0… 11 E05010025 Romney Marsh              E07000… Shepway ((1.035288 51.04665, 1.0… 12 E05010026 Sandgate & West Folkesto… E07000… Shepway ((1.155534 51.08386, 1.1… 13 E05010027 Walland & Denge Marsh     E07000… Shepway ((0.8944822 51.03699, 0.…"},{"path":"https://francisbarton.codeberg.page/boundr/docs/index.html","id":"you-can-just-request-bare-lookup-tables---no-spatial-data-attached","dir":"","previous_headings":"Examples","what":"You can just request bare lookup tables - no spatial data attached","title":"Retrieve Area Boundaries and Data from the ONS Open Geography Portal","text":"Sometimes boundr needs little help finding looking . Supplying year country filter can help get right table.","code":"lookup(\"spc\", \"spr\") # A tibble: 73 × 4    spc23cd   spc23nm                        spr23cd   spr23nm                  <chr>     <chr>                          <chr>     <chr>                  1 S16000083 Argyll and Bute                S17000011 Highlands and Islands  2 S16000086 Caithness, Sutherland and Ross S17000011 Highlands and Islands  3 S16000110 Na h-Eileanan an Iar           S17000011 Highlands and Islands  4 S16000125 Inverness and Nairn            S17000011 Highlands and Islands  5 S16000132 Moray                          S17000011 Highlands and Islands  6 S16000135 Orkney Islands                 S17000011 Highlands and Islands  7 S16000142 Shetland Islands               S17000011 Highlands and Islands  8 S16000143 Skye, Lochaber and Badenoch    S17000011 Highlands and Islands  9 S16000080 Almond Valley                  S17000012 Lothian               10 S16000104 Edinburgh Central              S17000012 Lothian               # ℹ 63 more rows"},{"path":"https://francisbarton.codeberg.page/boundr/docs/index.html","id":"a-lookup-table-for-wards-to-senedd-electoral-regions","dir":"","previous_headings":"Examples","what":"A lookup table for wards to Senedd electoral regions","title":"Retrieve Area Boundaries and Data from the ONS Open Geography Portal","text":"Using return_with = \"full\" includes available columns, just referred lookup_level within_level arguments.","code":"lookup(\"wd\", \"sener\", opts = opts(return_width = \"full\")) # A tibble: 764 × 9    wd23cd    wd23nm wd23nmw ua23cd ua23nm ua23nmw sener23cd sener23nm sener23nmw    <chr>     <chr>  <chr>   <chr>  <chr>  <chr>   <chr>     <chr>     <chr>       1 W05001492 Aethwy Aethwy  W0600… Isle … Ynys M… W10000001 North Wa… Gogledd C…  2 W05001493 Bodow… Bodowyr W0600… Isle … Ynys M… W10000001 North Wa… Gogledd C…  3 W05001494 Bro A… Bro Ab… W0600… Isle … Ynys M… W10000001 North Wa… Gogledd C…  4 W05001495 Bro'r… Bro'r … W0600… Isle … Ynys M… W10000001 North Wa… Gogledd C…  5 W05001496 Canol… Canolb… W0600… Isle … Ynys M… W10000001 North Wa… Gogledd C…  6 W05001497 Cefni  Cefni   W0600… Isle … Ynys M… W10000001 North Wa… Gogledd C…  7 W05001498 Crigy… Crigyll W0600… Isle … Ynys M… W10000001 North Wa… Gogledd C…  8 W05001499 Lligwy Lligwy  W0600… Isle … Ynys M… W10000001 North Wa… Gogledd C…  9 W05001500 Parc … Parc a… W0600… Isle … Ynys M… W10000001 North Wa… Gogledd C… 10 W05001501 Seiri… Seiriol W0600… Isle … Ynys M… W10000001 North Wa… Gogledd C… # ℹ 754 more rows"},{"path":"https://francisbarton.codeberg.page/boundr/docs/index.html","id":"the-sfc-tibble-is-ready-to-be-passed-to-a-mapping-tool-like-tmapqtm","dir":"","previous_headings":"Examples","what":"The sfc tibble is ready to be passed to a mapping tool like tmap::qtm()","title":"Retrieve Area Boundaries and Data from the ONS Open Geography Portal","text":"(’ve chosen something little complex tmap, qtm() works ).","code":"bounds(\"par\", \"lad\", \"Isles of Scilly\") |>   tmap::tm_shape() +   tmap::tm_polygons(     col = \"par23nm\",     palette = \"-Accent\",     legend.show = FALSE,     border.col = \"grey40\"   ) +   tmap::tm_style(\"natural\", bg.color = \"#7cb7bb\")"},{"path":"https://francisbarton.codeberg.page/boundr/docs/index.html","id":"bounds-now-supports-a-shortcut-syntax","dir":"","previous_headings":"Examples","what":"bounds now supports a shortcut syntax…","title":"Retrieve Area Boundaries and Data from the ONS Open Geography Portal","text":"…return bounds certain level, without specify within_level argument Take care - might download lot data !","code":"bounds(\"spr\") Simple feature collection with 8 features and 2 fields Geometry type: MULTIPOLYGON Dimension:     XY Bounding box:  xmin: -8.649996 ymin: 54.63326 xmax: -0.7246158 ymax: 60.86077 Geodetic CRS:  WGS 84 # A tibble: 8 × 3   spr22cd   spr22nm                                                     geometry   <chr>     <chr>                                             <MULTIPOLYGON [°]> 1 S17000011 Highlands and Islands (((-5.572266 55.28656, -5.570243 55.28481, -5… 2 S17000012 Lothian               (((-3.17174 55.9875, -3.17105 55.98732, -3.17… 3 S17000013 Mid Scotland and Fife (((-3.302574 56.03094, -3.302508 56.03033, -3… 4 S17000014 North East Scotland   (((-2.531457 56.71581, -2.530777 56.71507, -2… 5 S17000015 South Scotland        (((-4.085281 54.7686, -4.084491 54.7683, -4.0… 6 S17000018 West Scotland         (((-5.118861 55.42869, -5.118397 55.42741, -5… 7 S17000019 Central Scotland      (((-3.795887 56.10006, -3.795648 56.09964, -3… 8 S17000020 Glasgow               (((-4.271141 55.9281, -4.270303 55.92808, -4.…"},{"path":"https://francisbarton.codeberg.page/boundr/docs/index.html","id":"the-centroids-option-returns-area-centroids-where-available","dir":"","previous_headings":"Examples","what":"The “centroids” option returns area centroids where available","title":"Retrieve Area Boundaries and Data from the ONS Open Geography Portal","text":"usually population-weighted (PWC) nowadays. (older centroids address-weighted (AWC). Check OpenGeography website).","code":"sb <- bounds(\"msoa\", \"lad\", \"Swindon\") sp <- bounds(\"msoa\", \"utla\", \"Swindon\", geometry = \"centroids\")  sb |>   ggplot2::ggplot() +   ggplot2::geom_sf(colour = \"grey33\", fill = \"grey95\") +   ggplot2::geom_sf(data = sp, colour = \"orange\") +   ggplot2::theme_void()"},{"path":"https://francisbarton.codeberg.page/boundr/docs/index.html","id":"a-ggplot2-example","dir":"","previous_headings":"Examples","what":"A ggplot2 example","title":"Retrieve Area Boundaries and Data from the ONS Open Geography Portal","text":"specify ‘within_names’ argument alongside ‘lookup’ argument. ’s ‘within_level’ argument specified ’s nothing lookup . (aren’t lookup tables National Parks - just boundaries).","code":"bounds(\"npark\", within_names = \"Bannau Brycheiniog\") |>   ggplot2::ggplot() +   ggplot2::geom_sf() # https://github.com/francisbarton/mapirosa library(mapirosa)  # https://dieghernan.github.io/tidyterra/reference/geom_spatraster_rgb.html library(tidyterra)  bb <- bounds(   \"npark\",   within_names = \"Bannau Brycheiniog\",   opts = boundr_options(crs = 27700) )  bb_basemap <- mapirosa::build_basemap(   bbox = sf::st_bbox(bb),   zoom = 3,   style = \"outdoor\",   squarify = TRUE,   crs = 27700 ) |>   rlang::with_interactive(FALSE)  ggplot2::ggplot(bb) +   tidyterra::geom_spatraster_rgb(     data = bb_basemap,     maxcell = 1e7,     max_col_value = 1   ) +   ggplot2::theme_void() +   ggplot2::geom_sf(colour = \"coral\", fill = \"aquamarine\", alpha = 0.3)"},{"path":"https://francisbarton.codeberg.page/boundr/docs/index.html","id":"package-internal-structure","dir":"","previous_headings":"","what":"Package internal structure","title":"Retrieve Area Boundaries and Data from the ONS Open Geography Portal","text":"structure project looks bit like : call bounds() specify lower level area (eg ward) higher level area (eg local authority), specify either name higher level area (areas) ONS code. Multiple higher level areas can submitted. higher level area specified boundaries lookup returned directly (without intermediate lookup table created). return_table_info() finds API query URL suitable lookup table - one contains columns lower higher level areas. filtering opengeo_schema, cached copy various datasets available Open Geography API Services list. schema available internal data package,updated periodically maintainer may slightly date. lookup() builds lookup table (tibble) based areas said interested . time, return_spatial_data() - specified want spatial boundaries data areas - retrieve boundary data chosen resolution lower level areas. joined onto lookup table provided sfc tibble.","code":"bounds() [main UI function]    ^    |    |    ------- <----- add_geometry_to_table() [also available to user]    |      |    |      |    |      lookup() [main function available to the user]    |                ^    |                |    |                |    |                 <-------- return_table_info()     |                                       \\    |                                        \\     <------- return_spatial_data()           <----- opengeo_schema                     ^                       /          [pkg data]                     |                      /               ^                      <-------- return_bounds_info()        |                                                       build_schema()"},{"path":"https://francisbarton.codeberg.page/boundr/docs/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Retrieve Area Boundaries and Data from the ONS Open Geography Portal","text":"Suggestions improvements welcome, preferably posted issue Codeberg (GitHub). Contributions pull requests also welcome. Please note boundr released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/index.html","id":"news","dir":"","previous_headings":"","what":"News","title":"Retrieve Area Boundaries and Data from the ONS Open Geography Portal","text":"See NEWS.md version notes. boundr previously jogger.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/index.html","id":"licences","dir":"","previous_headings":"News","what":"Licences","title":"Retrieve Area Boundaries and Data from the ONS Open Geography Portal","text":"code repo MIT licensed. data code helps retrieve issued variety licences, including: Open Government Licence v3.0 Licensing statement stipulated ONS: Source: Office National Statistics licensed Open Government Licence v3.0 Contains OS data © Crown copyright database right 2024","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Francis Barton Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/add_geometry_to_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Use an existing tibble as the basis for a spatial query — add_geometry_to_table","title":"Use an existing tibble as the basis for a spatial query — add_geometry_to_table","text":"tibble produced lookup() - , column geographical ONS codes ending 'cd' - simply use table basis retrieving relevant boundaries centroids. add_geometry_to_table() use lefthand-column ending \"cd\".","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/add_geometry_to_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use an existing tibble as the basis for a spatial query — add_geometry_to_table","text":"","code":"add_geometry_to_table(   tbl,   opts = boundr_options(),   geometry = c(\"boundaries\", \"centroids\") )  add_geometry(   tbl,   opts = boundr_options(),   geometry = c(\"boundaries\", \"centroids\") )"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/add_geometry_to_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use an existing tibble as the basis for a spatial query — add_geometry_to_table","text":"tbl tibble column containing ONS geographical codes. opts set boundr_options() function. See ?boundr_options detail can set user, default values. geometry character. Two options: \"boundaries\" (default) \"centroids\". default, bounds() return area boundaries. Set explicitly \"centroids\" get area centroids instead.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/add_geometry_to_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use an existing tibble as the basis for a spatial query — add_geometry_to_table","text":"successful, return initial table additional geometry column added. Duplicate rows removed.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/add_geometry_to_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use an existing tibble as the basis for a spatial query — add_geometry_to_table","text":"","code":"tibble::tibble(wd23cd = c(\"S13003001\", \"N08000520\", \"W05001522\")) |>   add_geometry_to_table() #> Simple feature collection with 3 features and 1 field #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -7.345709 ymin: 52.91026 xmax: -4.104477 ymax: 57.51088 #> Geodetic CRS:  WGS 84 #> # A tibble: 3 × 2 #>   wd23cd                                                                geometry #>   <chr>                                                       <MULTIPOLYGON [°]> #> 1 N08000520 (((-7.327748 55.00978, -7.330063 55.00857, -7.332083 55.00825, -7.3… #> 2 S13003001 (((-4.432355 57.49436, -4.435513 57.49461, -4.429433 57.4938, -4.43… #> 3 W05001522 (((-4.265797 52.91221, -4.264972 52.91141, -4.263611 52.91087, -4.2…"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/add_msoa_names.html","id":null,"dir":"Reference","previous_headings":"","what":"If our lookup is MSOA, add the House of Commons Library MSOA Names - — add_msoa_names","title":"If our lookup is MSOA, add the House of Commons Library MSOA Names - — add_msoa_names","text":"lookup MSOA, add House Commons Library MSOA Names -","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/add_msoa_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"If our lookup is MSOA, add the House of Commons Library MSOA Names - — add_msoa_names","text":"","code":"add_msoa_names(x)"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/api_data_req.html","id":null,"dir":"Reference","previous_headings":"","what":"Build an API request for table data or spatial data — api_data_req","title":"Build an API request for table data or spatial data — api_data_req","text":"Build API request table data spatial data","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/api_data_req.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build an API request for table data or spatial data — api_data_req","text":"","code":"api_data_req(ids, url, fields, geo = TRUE, crs = NULL, ...)"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/api_data_req.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build an API request for table data or spatial data — api_data_req","text":"ids IDs data requested url API URL query fields fields include table returned geo Whether query \"returnGeometry\" (TRUE) crs Coordinate Reference System (CRS) code use ... arguments passed opengeo_api_req()","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/arrange_service_nms_by_res.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange geo schema by preferred resolutions (only applies when no user pref) — arrange_service_nms_by_res","title":"Arrange geo schema by preferred resolutions (only applies when no user pref) — arrange_service_nms_by_res","text":"Arrange geo schema preferred resolutions (applies user pref)","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/arrange_service_nms_by_res.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange geo schema by preferred resolutions (only applies when no user pref) — arrange_service_nms_by_res","text":"","code":"arrange_service_nms_by_res(x, r = res_codes())"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/arrange_service_nms_by_res.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange geo schema by preferred resolutions (only applies when no user pref) — arrange_service_nms_by_res","text":"x schema tibble r vector resolution codes e.g. \"BGC\" \"BFE\"","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/batch_it.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch a vector into a list — batch_it","title":"Batch a vector into a list — batch_it","text":"Batch vector list","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/batch_it.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch a vector into a list — batch_it","text":"","code":"batch_it(x, batch_size)"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/batch_it.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch a vector into a list — batch_it","text":"x vector batch_size number items batch returned list","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/boundr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"boundr: Retrieve Area Boundaries and Data from the ONS Open Geography Portal — boundr-package","title":"boundr: Retrieve Area Boundaries and Data from the ONS Open Geography Portal — boundr-package","text":"main purpose package download area lookups boundaries (GeoJSON format) using ONS Open Geography API, areas specified level within specified area.","code":""},{"path":[]},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/boundr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"boundr: Retrieve Area Boundaries and Data from the ONS Open Geography Portal — boundr-package","text":"Maintainer: Francis Barton fbarton@alwaysdata.net (ORCID)","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/boundr_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Use this to set custom options for bounds() and centroids() — boundr_options","title":"Use this to set custom options for bounds() and centroids() — boundr_options","text":"opts() alias function.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/boundr_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use this to set custom options for bounds() and centroids() — boundr_options","text":"","code":"boundr_options(   resolution = res_codes(),   return_width = c(\"tidy\", \"full\", \"minimal\"),   crs = 4326,   query_option = NULL )  opts(   resolution = res_codes(),   return_width = c(\"tidy\", \"full\", \"minimal\"),   crs = 4326,   query_option = NULL )"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/boundr_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use this to set custom options for bounds() and centroids() — boundr_options","text":"resolution character. See res_codes() potential options. generalised boundary , whether coastal boundaries adhere coastline full territorial extent. BGC default (G = Generalised (20m), C = limited coastline.) F indicates Full resolution; S indicates Super-generalised (200m); U indicates Ultra- generalised (500m) boundary resolution. Use E instead C full extent boundaries (e.g. BFE). combinations available. Ignored geometry set \"centroids\". return_width character. many possible columns returned table keep. Options \"tidy\", \"full\" \"minimal\". \"Tidy\" aims return four data columns (usually) - two columns lookup level codes names, two within level codes names. Plus geometry column. \"Full\" aims return data columns lookup. \"Minimal\" aims return just two data columns relating lookup_level. within supplied \"tidy\" equivalent \"minimal\". crs Coordinate Reference System (CRS) code use query_option numeric. Defaults 1, means URL just first one list possible services resulting level year filters . give want, can run script different option list.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/boundr_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use this to set custom options for bounds() and centroids() — boundr_options","text":"","code":"boundr_options(crs = 27700) # Set the CRS to British National Grid #> $rs #> (BGC|BSC|BUC|BFC|BGE|BFE|BUE|GCB|SGCB|UGB|UGCB|FCB|FEB|BGG) #>  #> $rw #> [1] \"tidy\" #>  #> $crs #> [1] 27700 #>  #> $opt #> NULL #>  boundr_options(return_width = \"full\") # Ask boundr to return all data columns #> $rs #> (BGC|BSC|BUC|BFC|BGE|BFE|BUE|GCB|SGCB|UGB|UGCB|FCB|FEB|BGG) #>  #> $rw #> [1] \"full\" #>  #> $crs #> [1] 4326 #>  #> $opt #> NULL #>"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/bounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Return boundary data at a specified level and area from the ONS OG API — bounds","title":"Return boundary data at a specified level and area from the ONS OG API — bounds","text":"Return boundary data specified level area ONS OG API","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/bounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return boundary data at a specified level and area from the ONS OG API — bounds","text":"","code":"bounds(   lookup_level,   within_level = NULL,   within_names = NULL,   within_codes = NULL,   lookup_year = NULL,   within_year = NULL,   opts = boundr_options(),   geometry = c(\"boundaries\", \"centroids\") )"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/bounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return boundary data at a specified level and area from the ONS OG API — bounds","text":"lookup_level character. Lower level area code eg \"lsoa\", \"wd\", \"lad\". within_level character. Higher level area code eg \"lad\", \"cty\", \"icb\". (, higher (conceptually) lookup_level; aka larger lookup!). supplied, uses default NULL, just data lookup_level returned. case, within_names within_codes (supplied) instead taken refer , used filter , lookup_level level. within_names, within_codes character. order restrict data returned specific area, either within_names within_codes must provided. Otherwise available boundaries level retrieved. Use place names eg \"Essex\" restrict certain geographical area. use ONS area codes eg \"W02000103\" likewise (useful wards, many share identical names). use argument filter within_level, within_level must specified! Otherwise {boundr} apply lookup_level instead. See examples. Vectors multiple names multiple codes can supplied. supply within_names within_codes, within_names used; (within_codes ignored). lookup_year numeric character. specific year data relating lookup_level, need . Defaults NULL, aims return data recent year available. Provide YYYY. within_year numeric character. specific year data relating within_level, need . Defaults NULL, aims return data recent year available. Provide YYYY. opts set boundr_options() function. See ?boundr_options detail can set user, default values. geometry character. Two options: \"boundaries\" (default) \"centroids\". default, bounds() return area boundaries. Set explicitly \"centroids\" get area centroids instead.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/bounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return boundary data at a specified level and area from the ONS OG API — bounds","text":"sfc tibble (data frame geometry)","code":""},{"path":[]},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/bounds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return boundary data at a specified level and area from the ONS OG API — bounds","text":"","code":"bounds(\"msoa\", \"lad\", \"Swansea\") #> Simple feature collection with 30 features and 7 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -4.333587 ymin: 51.53577 xmax: -3.842747 ymax: 51.77423 #> Geodetic CRS:  WGS 84 #> # A tibble: 30 × 8 #>    msoa21cd  msoa21nm    lad24cd   lad24nm msoa21nmw    msoa21hclnm msoa21hclnmw #>    <chr>     <chr>       <chr>     <chr>   <chr>        <chr>       <chr>        #>  1 W02000168 Swansea 001 W06000011 Swansea Abertawe 001 Pontarddul… Pontarddula… #>  2 W02000169 Swansea 002 W06000011 Swansea Abertawe 002 Clydach & … Clydach a M… #>  3 W02000170 Swansea 003 W06000011 Swansea Abertawe 003 Morriston … Gogledd Tre… #>  4 W02000171 Swansea 004 W06000011 Swansea Abertawe 004 Llangyfela… Llangyfelac… #>  5 W02000172 Swansea 005 W06000011 Swansea Abertawe 005 Gorseinon   Gorseinon    #>  6 W02000173 Swansea 006 W06000011 Swansea Abertawe 006 Birchgrove  Gellifedw    #>  7 W02000174 Swansea 007 W06000011 Swansea Abertawe 007 Loughor     Casllwchwr   #>  8 W02000175 Swansea 008 W06000011 Swansea Abertawe 008 Morriston … De Treforys  #>  9 W02000176 Swansea 009 W06000011 Swansea Abertawe 009 Mynydd-bach Mynydd-bach  #> 10 W02000177 Swansea 010 W06000011 Swansea Abertawe 010 Llansamlet  Llansamlet   #> # ℹ 20 more rows #> # ℹ 1 more variable: geometry <MULTIPOLYGON [°]> bounds(\"wd\", \"lad\", \"Shepway\", within_year = 2016) # Shepway no longer exists #> Simple feature collection with 13 features and 4 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 0.7768709 ymin: 50.91048 xmax: 1.221268 ymax: 51.205 #> Geodetic CRS:  WGS 84 #> # A tibble: 13 × 5 #>    wd16cd    wd16nm                    lad16cd lad16nm                  geometry #>    <chr>     <chr>                     <chr>   <chr>               <POLYGON [°]> #>  1 E05010015 Broadmead                 E07000… Shepway ((1.155543 51.08448, 1.1… #>  2 E05010016 Cheriton                  E07000… Shepway ((1.159752 51.10128, 1.1… #>  3 E05010017 East Folkestone           E07000… Shepway ((1.184824 51.09986, 1.1… #>  4 E05010018 Folkestone Central        E07000… Shepway ((1.177906 51.07553, 1.1… #>  5 E05010019 Folkestone Harbour        E07000… Shepway ((1.184824 51.09986, 1.1… #>  6 E05010020 Hythe                     E07000… Shepway ((1.119319 51.08961, 1.1… #>  7 E05010021 Hythe Rural               E07000… Shepway ((1.036358 51.08556, 1.0… #>  8 E05010022 New Romney                E07000… Shepway ((0.9804397 51.00251, 0.… #>  9 E05010023 North Downs East          E07000… Shepway ((1.147638 51.17718, 1.1… #> 10 E05010024 North Downs West          E07000… Shepway ((1.097309 51.18892, 1.0… #> 11 E05010025 Romney Marsh              E07000… Shepway ((1.035288 51.04665, 1.0… #> 12 E05010026 Sandgate & West Folkesto… E07000… Shepway ((1.155534 51.08386, 1.1… #> 13 E05010027 Walland & Denge Marsh     E07000… Shepway ((0.8944822 51.03699, 0.… bounds(\"rgn\", opts = boundr_options(resolution = \"BUC\")) #> Simple feature collection with 9 features and 2 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -6.360297 ymin: 49.88234 xmax: 1.763706 ymax: 55.81121 #> Geodetic CRS:  WGS 84 #> # A tibble: 9 × 3 #>   rgn23cd   rgn23nm                                                     geometry #>   <chr>     <chr>                                             <MULTIPOLYGON [°]> #> 1 E12000001 North East               (((-1.401114 55.01121, -1.404909 55.00954,… #> 2 E12000002 North West               (((-3.242936 54.09894, -3.252463 54.09577,… #> 3 E12000003 Yorkshire and The Humber (((-0.5207704 53.68522, -0.5357478 53.6812… #> 4 E12000004 East Midlands            (((-0.248476 53.59366, -0.2513956 53.58465… #> 5 E12000005 West Midlands            (((-1.860821 53.18847, -1.812615 53.15441,… #> 6 E12000006 East of England          (((0.6458286 51.53922, 0.6274273 51.53309,… #> 7 E12000007 London                   (((-0.01191868 51.68088, -0.01225969 51.64… #> 8 E12000008 South East               (((-1.55515 50.71435, -1.551177 50.70614, … #> 9 E12000009 South West               (((-6.349051 49.89822, -6.328423 49.89246,… bounds(\"par\", \"lad\", \"Isles of Scilly\") # par = \"parish\" #> Simple feature collection with 5 features and 4 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -6.418667 ymin: 49.86479 xmax: -6.244608 ymax: 49.98065 #> Geodetic CRS:  WGS 84 #> # A tibble: 5 × 5 #>   par23cd   par23nm     lad23cd   lad23nm                               geometry #>   <chr>     <chr>       <chr>     <chr>                       <MULTIPOLYGON [°]> #> 1 E04012729 Bryher      E06000053 Isles of Scilly (((-6.386119 49.93495, -6.385… #> 2 E04012730 St Agnes    E06000053 Isles of Scilly (((-6.398976 49.8649, -6.4004… #> 3 E04012731 St Martin's E06000053 Isles of Scilly (((-6.273013 49.94357, -6.274… #> 4 E04012732 St Mary's   E06000053 Isles of Scilly (((-6.280232 49.91312, -6.280… #> 5 E04012733 Tresco      E06000053 Isles of Scilly (((-6.361791 49.93116, -6.362… bounds(\"spr\") #> Warning: GDAL Message 1: organizePolygons() received a polygon with more than 100 parts.  The processing may be really slow.  You can skip the processing by setting METHOD=SKIP. #> Simple feature collection with 8 features and 2 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -8.649996 ymin: 54.63326 xmax: -0.7246158 ymax: 60.86077 #> Geodetic CRS:  WGS 84 #> # A tibble: 8 × 3 #>   spr22cd   spr22nm                                                     geometry #>   <chr>     <chr>                                             <MULTIPOLYGON [°]> #> 1 S17000011 Highlands and Islands (((-5.572266 55.28656, -5.570243 55.28481, -5… #> 2 S17000012 Lothian               (((-3.17174 55.9875, -3.17105 55.98732, -3.17… #> 3 S17000013 Mid Scotland and Fife (((-3.302574 56.03094, -3.302508 56.03033, -3… #> 4 S17000014 North East Scotland   (((-2.531457 56.71581, -2.530777 56.71507, -2… #> 5 S17000015 South Scotland        (((-4.085281 54.7686, -4.084491 54.7683, -4.0… #> 6 S17000018 West Scotland         (((-5.118861 55.42869, -5.118397 55.42741, -5… #> 7 S17000019 Central Scotland      (((-3.795887 56.10006, -3.795648 56.09964, -3… #> 8 S17000020 Glasgow               (((-4.271141 55.9281, -4.270303 55.92808, -4.… bounds(\"npark\", within_names = \"Bannau Brycheiniog\") #> Simple feature collection with 1 feature and 2 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -3.989641 ymin: 51.70209 xmax: -2.952245 ymax: 52.07827 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 3 #>   npark22cd npark22nm                                                   geometry #>   <chr>     <chr>                                                  <POLYGON [°]> #> 1 W18000001 Bannau Brycheiniog ((-3.120246 52.07322, -3.119622 52.0728, -3.1202… bounds(\"msoa\", \"utla\", \"Swindon\", geometry = \"centroids\") #> Simple feature collection with 27 features and 5 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -1.841969 ymin: 51.52607 xmax: -1.711772 ymax: 51.63355 #> Geodetic CRS:  WGS 84 #> # A tibble: 27 × 6 #>    msoa21cd  msoa21nm    msoa21hclnm utla23cd utla23nm             geometry #>    <chr>     <chr>       <chr>       <chr>    <chr>             <POINT [°]> #>  1 E02003227 Swindon 016 Walcot East E060000… Swindon  (-1.755953 51.56128) #>  2 E02003221 Swindon 010 Gorse Hill  E060000… Swindon  (-1.778586 51.57297) #>  3 E02003235 Swindon 024 Lawn & Eas… E060000… Swindon  (-1.771018 51.54633) #>  4 E02003226 Swindon 015 Central No… E060000… Swindon   (-1.780904 51.5642) #>  5 E02006847 Swindon 026 Mouldon Hi… E060000… Swindon  (-1.826195 51.59848) #>  6 E02003222 Swindon 011 Roughmoor   E060000… Swindon   (-1.840047 51.5718) #>  7 E02003214 Swindon 003 Penhill     E060000… Swindon  (-1.782552 51.59257) #>  8 E02003224 Swindon 013 Covingham   E060000… Swindon  (-1.734986 51.56627) #>  9 E02003232 Swindon 021 Kingshill … E060000… Swindon   (-1.792952 51.5512) #> 10 E02003219 Swindon 008 Broad Blun… E060000… Swindon  (-1.795708 51.60868) #> # ℹ 17 more rows"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/build_flat_query.html","id":null,"dir":"Reference","previous_headings":"","what":"This is such a crucial function to the whole package! But so simple. — build_flat_query","title":"This is such a crucial function to the whole package! But so simple. — build_flat_query","text":"crucial function whole package! simple.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/build_flat_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This is such a crucial function to the whole package! But so simple. — build_flat_query","text":"","code":"build_flat_query(var, vec)"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/build_id_req.html","id":null,"dir":"Reference","previous_headings":"","what":"Build an API request for IDs only — build_id_req","title":"Build an API request for IDs only — build_id_req","text":"Build API request IDs ","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/build_id_req.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build an API request for IDs only — build_id_req","text":"","code":"build_id_req(url, where, ...)"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/build_id_req.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build an API request for IDs only — build_id_req","text":"url API URL query geographical filters applied ... arguments passed opengeo_api_req()","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/common_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Common procedure for joinable and not-necessarily-joinable lookup()s — common_lookup","title":"Common procedure for joinable and not-necessarily-joinable lookup()s — common_lookup","text":"Common procedure joinable -necessarily-joinable lookup()s","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/common_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Common procedure for joinable and not-necessarily-joinable lookup()s — common_lookup","text":"","code":"common_lookup(   lookup_level,   within_level = NULL,   within_names = NULL,   within_codes = NULL,   lookup_year = NULL,   within_year = NULL,   opts = boundr_options(),   joinable = FALSE )"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/common_lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Common procedure for joinable and not-necessarily-joinable lookup()s — common_lookup","text":"joinable logical. Whether query joinable (TRUE) forms part geospatial query (FALSE). latter case, function try return lookup table contains appropriate field spatial data (, boundaries centroids) joined onto.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/common_spatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial query build procedure used for both bounds() and centroids() — common_spatial","title":"Spatial query build procedure used for both bounds() and centroids() — common_spatial","text":"Spatial query build procedure used bounds() centroids()","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/common_spatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial query build procedure used for both bounds() and centroids() — common_spatial","text":"","code":"common_spatial(   lookup_level,   within_level = NULL,   within_names = NULL,   within_codes = NULL,   lookup_year = NULL,   within_year = NULL,   opts = boundr_options(),   geometry = c(\"boundaries\", \"centroids\") )"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/common_spatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial query build procedure used for both bounds() and centroids() — common_spatial","text":"lookup_level character. Lower level area code eg \"lsoa\", \"wd\", \"lad\". within_level character. Higher level area code eg \"lad\", \"cty\", \"icb\". (, higher (conceptually) lookup_level; aka larger lookup!). supplied, uses default NULL, just data lookup_level returned. case, within_names within_codes (supplied) instead taken refer , used filter , lookup_level level. within_names, within_codes character. order restrict data returned specific area, either within_names within_codes must provided. Otherwise available boundaries level retrieved. Use place names eg \"Essex\" restrict certain geographical area. use ONS area codes eg \"W02000103\" likewise (useful wards, many share identical names). use argument filter within_level, within_level must specified! Otherwise {boundr} apply lookup_level instead. See examples. Vectors multiple names multiple codes can supplied. supply within_names within_codes, within_names used; (within_codes ignored). lookup_year numeric character. specific year data relating lookup_level, need . Defaults NULL, aims return data recent year available. Provide YYYY. within_year numeric character. specific year data relating within_level, need . Defaults NULL, aims return data recent year available. Provide YYYY. opts set boundr_options() function. See ?boundr_options detail can set user, default values. geometry character. Two options: \"boundaries\" (default) \"centroids\". default, bounds() return boundaries centroids() return centroids.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/create_lookup_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a lookup table by querying the ONS OpenGeography API — create_lookup_table","title":"Create a lookup table by querying the ONS OpenGeography API — create_lookup_table","text":"Calls return_lookup_query_info() processes output, returning tibble.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/create_lookup_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a lookup table by querying the ONS OpenGeography API — create_lookup_table","text":"","code":"create_lookup_table(   lookup,   within = NULL,   within_names = NULL,   within_codes = NULL,   return_width = c(\"tidy\", \"full\", \"minimal\"),   lookup_year = NULL,   within_year = NULL,   country_filter = c(\"UK|GB|EW|EN|SC|WA\", \"UK\", \"GB\", \"EW\", \"EN\", \"SC\", \"WA\"),   option = NULL,   standalone = TRUE,   chatty = rlang::is_interactive() )"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/create_lookup_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a lookup table by querying the ONS OpenGeography API — create_lookup_table","text":"lookup character. Lower level area code eg \"lsoa\", \"wd\", \"lad\". Equivalent lookup parameter bounds(). within character. Higher level area code eg \"lad\", \"cty\". Equivalent within parameter bounds(). within_names, within_codes character. order restrict data returned specific area, either within_names within_codes must provided. Otherwise boundaries within country level retrieved. Use place names eg \"Essex\" restrict certain geographical area. Use ONS area codes eg \"W02000103\" likewise (useful wards, many share identical names). vector multiple names codes can supplied. return_width character. many possible columns returned table keep. Options \"tidy\", \"full\" \"minimal\". lookup_year numeric character. specific year data relating parameter x, needed. Defaults NULL, return recent data. within_year numeric character. specific year data relating parameter y, needed. Defaults NULL, return recent data. country_filter character. Open Geography datasets sometimes available just within certain countries. Specify country code want results restricted certain country - eg \"WA\" Wales, \"EW\" England Wales. default returns options. option numeric. Defaults 1, means URL just first one list possible services resulting level year filters . give want, can run script different option list. standalone logical. Whether query standalone (TRUE) forms part geospatial query (FALSE). latter case, function try return lookup table contains appropriate columns spatial data (boundaries centroids) joined onto. chatty Boolean. Whether print feedback 'decisions' function taken table query. Default TRUE function run interactive session, FALSE otherwise.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/create_lookup_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a lookup table by querying the ONS OpenGeography API — create_lookup_table","text":"tibble","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/create_lookup_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a lookup table by querying the ONS OpenGeography API — create_lookup_table","text":"","code":"create_lookup_table(\"msoa\", \"lad\", \"Swindon\") #> # A tibble: 27 × 5 #>    msoa21cd  msoa21nm    msoa21hclnm                    lad24cd   lad24nm #>    <chr>     <chr>       <chr>                          <chr>     <chr>   #>  1 E02003230 Swindon 019 Central South & Eastcott       E06000030 Swindon #>  2 E02003221 Swindon 010 Gorse Hill                     E06000030 Swindon #>  3 E02003231 Swindon 020 Park North & Park South        E06000030 Swindon #>  4 E02003229 Swindon 018 Freshbrook North & Grange Park E06000030 Swindon #>  5 E02003233 Swindon 022 Freshbrook South & Toothill    E06000030 Swindon #>  6 E02003223 Swindon 012 Rodbourne & Cheney Manor       E06000030 Swindon #>  7 E02003235 Swindon 024 Lawn & East Wichel             E06000030 Swindon #>  8 E02003232 Swindon 021 Kingshill & Okus               E06000030 Swindon #>  9 E02006847 Swindon 026 Mouldon Hill & Oakhurst        E06000030 Swindon #> 10 E02003218 Swindon 007 Pinehurst                      E06000030 Swindon #> # ℹ 17 more rows create_lookup_table(\"wd\", \"sener\", lookup_year = 2022, return_width = \"full\") #> # A tibble: 764 × 7 #>    wd22cd    wd22nm                    ua22cd ua22nm ua22nmw sener22cd sener22nm #>    <chr>     <chr>                     <chr>  <chr>  <chr>   <chr>     <chr>     #>  1 W05001715 Bangor Is-y-Coed          W0600… Wrexh… Wrecsam W10000001 North Wa… #>  2 W05001714 Acton and Maesydre        W0600… Wrexh… Wrecsam W10000001 North Wa… #>  3 W05001713 Acrefair North            W0600… Wrexh… Wrecsam W10000001 North Wa… #>  4 W05001615 Whitford                  W0600… Flint… Sir y … W10000001 North Wa… #>  5 W05001614 Treuddyn                  W0600… Flint… Sir y … W10000001 North Wa… #>  6 W05001613 Shotton West              W0600… Flint… Sir y … W10000001 North Wa… #>  7 W05001612 Shotton East and Shotton… W0600… Flint… Sir y … W10000001 North Wa… #>  8 W05001611 Saltney Ferry             W0600… Flint… Sir y … W10000001 North Wa… #>  9 W05001610 Queensferry and Sealand   W0600… Flint… Sir y … W10000001 North Wa… #> 10 W05001609 Pen-y-ffordd              W0600… Flint… Sir y … W10000001 North Wa… #> # ℹ 754 more rows"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/gregg.html","id":null,"dir":"Reference","previous_headings":"","what":"Conveniently wrap a regular expr in glue::glue_data() and pass to grepl() — gregg","title":"Conveniently wrap a regular expr in glue::glue_data() and pass to grepl() — gregg","text":"Conveniently wrap regular expr glue::glue_data() pass grepl()","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/gregg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conveniently wrap a regular expr in glue::glue_data() and pass to grepl() — gregg","text":"","code":"gregg(x, rx, g = caller_env(), ...)"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/gregg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conveniently wrap a regular expr in glue::glue_data() and pass to grepl() — gregg","text":"x character vector check rx string processing glue_data() used regex pattern grepl() ... Arguments passed onto grepl()","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/ifnull.html","id":null,"dir":"Reference","previous_headings":"","what":"This is the same as %||% but I prefer bracketed functions to infixes — ifnull","title":"This is the same as %||% but I prefer bracketed functions to infixes — ifnull","text":"%||% prefer bracketed functions infixes","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/ifnull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This is the same as %||% but I prefer bracketed functions to infixes — ifnull","text":"","code":"ifnull(x, y)"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/ifnull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This is the same as %||% but I prefer bracketed functions to infixes — ifnull","text":"x, y R objects","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a lookup table by querying the ONS OpenGeography API — lookup","title":"Create a lookup table by querying the ONS OpenGeography API — lookup","text":"Create lookup table querying ONS OpenGeography API","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a lookup table by querying the ONS OpenGeography API — lookup","text":"","code":"lookup(   lookup_level,   within_level = NULL,   within_names = NULL,   within_codes = NULL,   lookup_year = NULL,   within_year = NULL,   opts = boundr_options() )"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a lookup table by querying the ONS OpenGeography API — lookup","text":"lookup_level character. Lower level area code eg \"lsoa\", \"wd\", \"lad\". within_level character. Higher level area code eg \"lad\", \"cty\", \"icb\". (, higher (conceptually) lookup_level; aka larger lookup!). supplied, uses default NULL, just data lookup_level returned. case, within_names within_codes (supplied) instead taken refer , used filter , lookup_level level. within_names, within_codes character. order restrict data returned specific area, either within_names within_codes must provided. Otherwise available boundaries level retrieved. Use place names eg \"Essex\" restrict certain geographical area. use ONS area codes eg \"W02000103\" likewise (useful wards, many share identical names). use argument filter within_level, within_level must specified! Otherwise {boundr} apply lookup_level instead. See examples. Vectors multiple names multiple codes can supplied. supply within_names within_codes, within_names used; (within_codes ignored). lookup_year numeric character. specific year data relating lookup_level, need . Defaults NULL, aims return data recent year available. Provide YYYY. within_year numeric character. specific year data relating within_level, need . Defaults NULL, aims return data recent year available. Provide YYYY. opts set boundr_options() function. See ?boundr_options detail can set user, default values.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/lookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a lookup table by querying the ONS OpenGeography API — lookup","text":"tibble","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/lookup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a lookup table by querying the ONS OpenGeography API — lookup","text":"","code":"lookup(\"msoa\", \"lad\", \"Swindon\") #> # A tibble: 27 × 5 #>    msoa21cd  msoa21nm    msoa21hclnm                    lad24cd   lad24nm #>    <chr>     <chr>       <chr>                          <chr>     <chr>   #>  1 E02003230 Swindon 019 Central South & Eastcott       E06000030 Swindon #>  2 E02003221 Swindon 010 Gorse Hill                     E06000030 Swindon #>  3 E02003231 Swindon 020 Park North & Park South        E06000030 Swindon #>  4 E02003229 Swindon 018 Freshbrook North & Grange Park E06000030 Swindon #>  5 E02003233 Swindon 022 Freshbrook South & Toothill    E06000030 Swindon #>  6 E02003223 Swindon 012 Rodbourne & Cheney Manor       E06000030 Swindon #>  7 E02003235 Swindon 024 Lawn & East Wichel             E06000030 Swindon #>  8 E02003232 Swindon 021 Kingshill & Okus               E06000030 Swindon #>  9 E02006847 Swindon 026 Mouldon Hill & Oakhurst        E06000030 Swindon #> 10 E02003218 Swindon 007 Pinehurst                      E06000030 Swindon #> # ℹ 17 more rows lookup(\"wd\", \"sener\", opts = opts(return_width = \"full\")) #> # A tibble: 764 × 9 #>    wd23cd    wd23nm wd23nmw ua23cd ua23nm ua23nmw sener23cd sener23nm sener23nmw #>    <chr>     <chr>  <chr>   <chr>  <chr>  <chr>   <chr>     <chr>     <chr>      #>  1 W05001492 Aethwy Aethwy  W0600… Isle … Ynys M… W10000001 North Wa… Gogledd C… #>  2 W05001493 Bodow… Bodowyr W0600… Isle … Ynys M… W10000001 North Wa… Gogledd C… #>  3 W05001494 Bro A… Bro Ab… W0600… Isle … Ynys M… W10000001 North Wa… Gogledd C… #>  4 W05001495 Bro'r… Bro'r … W0600… Isle … Ynys M… W10000001 North Wa… Gogledd C… #>  5 W05001496 Canol… Canolb… W0600… Isle … Ynys M… W10000001 North Wa… Gogledd C… #>  6 W05001497 Cefni  Cefni   W0600… Isle … Ynys M… W10000001 North Wa… Gogledd C… #>  7 W05001498 Crigy… Crigyll W0600… Isle … Ynys M… W10000001 North Wa… Gogledd C… #>  8 W05001499 Lligwy Lligwy  W0600… Isle … Ynys M… W10000001 North Wa… Gogledd C… #>  9 W05001500 Parc … Parc a… W0600… Isle … Ynys M… W10000001 North Wa… Gogledd C… #> 10 W05001501 Seiri… Seiriol W0600… Isle … Ynys M… W10000001 North Wa… Gogledd C… #> # ℹ 754 more rows"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/ogu.html","id":null,"dir":"Reference","previous_headings":"","what":"The base part of the OpenGeography API standard URLs, for convenience — ogu","title":"The base part of the OpenGeography API standard URLs, for convenience — ogu","text":"base part OpenGeography API standard URLs, convenience","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/ogu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The base part of the OpenGeography API standard URLs, for convenience — ogu","text":"","code":"ogu()"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/og_.html","id":null,"dir":"Reference","previous_headings":"","what":"The base part of the OpenGeography API standard URLs, for convenience — og_","title":"The base part of the OpenGeography API standard URLs, for convenience — og_","text":"base part OpenGeography API standard URLs, convenience","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/og_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The base part of the OpenGeography API standard URLs, for convenience — og_","text":"","code":"og_()"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/opengeo_api_req.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic OpenGeography API request — opengeo_api_req","title":"Basic OpenGeography API request — opengeo_api_req","text":"Basic OpenGeography API request","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/opengeo_api_req.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic OpenGeography API request — opengeo_api_req","text":"","code":"opengeo_api_req(   url,   append = \"0/query\",   format = \"pjson\",   user_agent = \"boundr R package (https://codeberg.org/francisbarton/boundr)\" )"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/opengeo_api_req.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic OpenGeography API request — opengeo_api_req","text":"url API URL query append string appended URL path format data format return API, \"pjson\" default user_agent Allows user specify certain User Agent string header query. Sends string \"boundr R package\" default","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/points.html","id":null,"dir":"Reference","previous_headings":"","what":"Return centroid points at a specified level and area from the ONS OG API — points","title":"Return centroid points at a specified level and area from the ONS OG API — points","text":"Return centroid points specified level area ONS OG API","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return centroid points at a specified level and area from the ONS OG API — points","text":"","code":"points(   lookup,   within = NULL,   within_names = NULL,   within_codes = NULL,   return_width = c(\"tidy\", \"full\", \"minimal\"),   lookup_year = NULL,   within_year = NULL,   country_filter = c(\"UK|GB|EW|EN|SC|WA\", \"UK\", \"GB\", \"EW\", \"EN\", \"SC\", \"WA\"),   option = NULL,   crs = 4326 )"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return centroid points at a specified level and area from the ONS OG API — points","text":"lookup character. Lower level area code eg \"lsoa\", \"wd\", \"lad\". Equivalent lookup parameter bounds(). within character. Higher level area code eg \"lad\", \"cty\". Equivalent within parameter bounds(). within_names, within_codes character. order restrict data returned specific area, either within_names within_codes must provided. Otherwise boundaries within country level retrieved. Use place names eg \"Essex\" restrict certain geographical area. Use ONS area codes eg \"W02000103\" likewise (useful wards, many share identical names). vector multiple names codes can supplied. return_width character. many possible columns returned table keep. Options \"tidy\", \"full\" \"minimal\". lookup_year numeric character. specific year data relating parameter x, needed. Defaults NULL, return recent data. within_year numeric character. specific year data relating parameter y, needed. Defaults NULL, return recent data. country_filter character. Open Geography datasets sometimes available just within certain countries. Specify country code want results restricted certain country - eg \"WA\" Wales, \"EW\" England Wales. default returns options. option numeric. Defaults 1, means URL just first one list possible services resulting level year filters . give want, can run script different option list. crs Coordinate Reference System (CRS) code use. 4326 default.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return centroid points at a specified level and area from the ONS OG API — points","text":"sfc tibble (data frame geometry)","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/process_lookup_query_data.html","id":null,"dir":"Reference","previous_headings":"","what":"This function is the one that handles all actual querying of the API for lookup(). Previous queries in the pipeline have been working ","title":"This function is the one that handles all actual querying of the API for lookup(). Previous queries in the pipeline have been working ","text":"function one handles actual querying API lookup(). Previous queries pipeline working \"offline\" just schema data provided within package.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/process_lookup_query_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function is the one that handles all actual querying of the API for lookup(). Previous queries in the pipeline have been working ","text":"","code":"process_lookup_query_data(query_data)"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/process_query_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Just another piece of the pipeline — process_query_info","title":"Just another piece of the pipeline — process_query_info","text":"Just another piece pipeline","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/process_query_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Just another piece of the pipeline — process_query_info","text":"","code":"process_query_info(   query_info,   within_names,   within_codes,   return_width,   query_opt )"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/process_spatial_query_data.html","id":null,"dir":"Reference","previous_headings":"","what":"This function is the one that handles all actual querying of the API for bounds()/centroids(). Previous queries in the pipeline have been working ","title":"This function is the one that handles all actual querying of the API for bounds()/centroids(). Previous queries in the pipeline have been working ","text":"function one handles actual querying API bounds()/centroids(). Previous queries pipeline working \"offline\" just schema data provided within package.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/process_spatial_query_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function is the one that handles all actual querying of the API for bounds()/centroids(). Previous queries in the pipeline have been working ","text":"","code":"process_spatial_query_data(query_data, crs)"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/query_opengeo_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform an API query using a request object — query_opengeo_api","title":"Perform an API query using a request object — query_opengeo_api","text":"Perform API query using request object","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/query_opengeo_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform an API query using a request object — query_opengeo_api","text":"","code":"query_opengeo_api(req, max_tries = 3, verbosity = 0)"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/query_opengeo_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform an API query using a request object — query_opengeo_api","text":"req httr2 request object max_tries integer. 3 default (now). Passed httr2::req_retry () controls many times try perform request, initial attempt(s) fail. verbosity integer. 0 default. Passed httr2::req_perform() controls verbosity printed output performing request. Can integer 0 3, NULL. See ?req_perform detail.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/remove_nmw.html","id":null,"dir":"Reference","previous_headings":"","what":"If we don't have any areas in Wales, remove 'nmw' columns for simplicity — remove_nmw","title":"If we don't have any areas in Wales, remove 'nmw' columns for simplicity — remove_nmw","text":"areas Wales, remove 'nmw' columns simplicity","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/remove_nmw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"If we don't have any areas in Wales, remove 'nmw' columns for simplicity — remove_nmw","text":"","code":"remove_nmw(tbl)"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/res_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"A list of all available resolutions for boundary geometries in the current OpenGeography schema. Not all resolutions are available for all area types! The most common ones are listed first, with the ","title":"A list of all available resolutions for boundary geometries in the current OpenGeography schema. Not all resolutions are available for all area types! The most common ones are listed first, with the ","text":"list available resolutions boundary geometries current OpenGeography schema. resolutions available area types! common ones listed first, \"generalised\" (20m resolution) BGC preferred option specify one.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/res_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list of all available resolutions for boundary geometries in the current OpenGeography schema. Not all resolutions are available for all area types! The most common ones are listed first, with the ","text":"","code":"res_codes()"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/return_lookup_query_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Return lookup query URL and lower and higher field codes — return_lookup_query_info","title":"Return lookup query URL and lower and higher field codes — return_lookup_query_info","text":"Return lookup query URL lower higher field codes","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/return_lookup_query_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return lookup query URL and lower and higher field codes — return_lookup_query_info","text":"","code":"return_lookup_query_info(   lookup,   within,   lookup_year,   within_year,   country_filter,   option,   standalone,   chatty )"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/return_lookup_query_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return lookup query URL and lower and higher field codes — return_lookup_query_info","text":"lookup character. Lower level area code eg \"lsoa\", \"wd\", \"lad\". Equivalent lookup parameter bounds(). within character. Higher level area code eg \"lad\", \"cty\". Equivalent within parameter bounds(). lookup_year numeric character. specific year data relating parameter x, needed. Defaults NULL, return recent data. within_year numeric character. specific year data relating parameter y, needed. Defaults NULL, return recent data. country_filter character. Open Geography datasets sometimes available just within certain countries. Specify country code want results restricted certain country - eg \"WA\" Wales, \"EW\" England Wales. default returns options. option numeric. Defaults 1, means URL just first one list possible services resulting level year filters . give want, can run script different option list. standalone logical. Whether query standalone (TRUE) forms part geospatial query (FALSE). latter case, function try return lookup table contains appropriate columns spatial data (boundaries centroids) joined onto. chatty Boolean. Whether print feedback 'decisions' function taken table query. Default TRUE function run interactive session, FALSE otherwise.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/return_lookup_query_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return lookup query URL and lower and higher field codes — return_lookup_query_info","text":"list length 3: query URL, lower level (lookup) field code (eg lsoa11cd), higher level (within) field code.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/return_lookup_table_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get initial data about query — return_lookup_table_info","title":"Get initial data about query — return_lookup_table_info","text":"Get initial data query","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/return_lookup_table_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get initial data about query — return_lookup_table_info","text":"","code":"return_lookup_table_info(   lookup_level,   within_level,   lookup_year,   within_year,   joinable )"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/return_narrow_table_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get initial data about query for ","title":"Get initial data about query for ","text":"Get initial data query \"narrow\" tables (lookup table)","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/return_narrow_table_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get initial data about query for ","text":"","code":"return_narrow_table_info(lookup_level, lookup_year, rs = NULL)"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/return_query_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"This function also actually queries the API — return_query_ids","title":"This function also actually queries the API — return_query_ids","text":"function also actually queries API","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/return_query_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function also actually queries the API — return_query_ids","text":"","code":"return_query_ids(query_url, where_string)"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/return_result_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform an API query and extract the returned IDs — return_result_ids","title":"Perform an API query and extract the returned IDs — return_result_ids","text":"large queries, just return IDs can batched full queries.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/return_result_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform an API query and extract the returned IDs — return_result_ids","text":"","code":"return_result_ids(url, where, max_tries = 3, verbosity = 0, ...)"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/return_result_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform an API query and extract the returned IDs — return_result_ids","text":"url API URL query geographical filters applied max_tries integer. 3 default (now). Passed httr2::req_retry () controls many times try perform request, initial attempt(s) fail. verbosity integer. 0 default. Passed httr2::req_perform() controls verbosity printed output performing request. Can integer 0 3, NULL. See ?req_perform detail. ... arguments passed opengeo_api_req()","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/return_spatial_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform an API query and handle the returned spatial data — return_spatial_data","title":"Perform an API query and handle the returned spatial data — return_spatial_data","text":"Perform API query handle returned spatial data","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/return_spatial_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform an API query and handle the returned spatial data — return_spatial_data","text":"","code":"return_spatial_data(   ids,   url,   fields,   crs = 4326,   max_tries = 3,   verbosity = 0,   ... )"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/return_spatial_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform an API query and handle the returned spatial data — return_spatial_data","text":"ids IDs data requested url API URL query fields fields include table returned crs Coordinate Reference System (CRS) code use max_tries integer. 3 default (now). Passed httr2::req_retry () controls many times try perform request, initial attempt(s) fail. verbosity integer. 0 default. Passed httr2::req_perform() controls verbosity printed output performing request. Can integer 0 3, NULL. See ?req_perform detail. ... arguments passed opengeo_api_req()","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/return_table_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform an API query and handle the returned table data — return_table_data","title":"Perform an API query and handle the returned table data — return_table_data","text":"Perform API query handle returned table data","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/return_table_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform an API query and handle the returned table data — return_table_data","text":"","code":"return_table_data(ids, url, fields, max_tries = 3, verbosity = 0, ...)"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/return_table_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform an API query and handle the returned table data — return_table_data","text":"ids IDs data requested url API URL query fields fields include table returned max_tries integer. 3 default (now). Passed httr2::req_retry () controls many times try perform request, initial attempt(s) fail. verbosity integer. 0 default. Passed httr2::req_perform() controls verbosity printed output performing request. Can integer 0 3, NULL. See ?req_perform detail. ... arguments passed opengeo_api_req()","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/spatial_data_req.html","id":null,"dir":"Reference","previous_headings":"","what":"Build an API request for spatial (geojson) data — spatial_data_req","title":"Build an API request for spatial (geojson) data — spatial_data_req","text":"Build API request spatial (geojson) data","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/spatial_data_req.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build an API request for spatial (geojson) data — spatial_data_req","text":"","code":"spatial_data_req(ids, url, crs = 4326, ...)"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/spatial_data_req.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build an API request for spatial (geojson) data — spatial_data_req","text":"ids IDs data requested url API URL query crs Coordinate Reference System (CRS) code use. 4326 default. ... arguments passed opengeo_api_req()","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/table_data_req.html","id":null,"dir":"Reference","previous_headings":"","what":"Build an API request for table data — table_data_req","title":"Build an API request for table data — table_data_req","text":"Build API request table data","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/table_data_req.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build an API request for table data — table_data_req","text":"","code":"table_data_req(ids, url, fields, ...)"},{"path":"https://francisbarton.codeberg.page/boundr/docs/reference/table_data_req.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build an API request for table data — table_data_req","text":"ids IDs data requested url API URL query fields fields include table returned ... arguments passed opengeo_api_req()","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with jogger","title":"Getting help with jogger","text":"Thanks using jogger! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with jogger","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with jogger","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with jogger","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/news/index.html","id":"boundr-v037-august-11-2024","dir":"Changelog","previous_headings":"","what":"boundr v0.3.7 (August 11, 2024)","title":"boundr v0.3.7 (August 11, 2024)","text":"Improves behaviour bounds() points() making less likely lookup table created match geo data field Internally, shared code within bounds() points() refactored common function (user-facing), making bounds() points() like wrapper functions. Several helper functions tidied unnecessary duplication functionality across helpers lookup table creation spatial data retrieval removed, making fewer leaner helper functions removing chunk code package. cli used produce user-facing error messages, place usethis. function allows user supply lookup table boundr automatically add geo data create sfc object now improved functional intended. Linting added development process adoption lintr. convoluted process handling MSOA-based lookups now obviated entirely - ONS site now seems support MSOA-based lookups much better. Internal copy schema data updated.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/news/index.html","id":"boundr-v036-november-15-2023","dir":"Changelog","previous_headings":"","what":"boundr v0.3.6 (November 15, 2023)","title":"boundr v0.3.6 (November 15, 2023)","text":"Enables bounds() query shortcut lookup table step just return boundaries level (just call function single lookup argument) Improved README examples Added pkgdown site, thanks Tom Smith (closes issue ## boundr v2) Improve function param documentation Update schema data (10 Nov 2023)","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/news/index.html","id":"boundr-v035-june-24-2023","dir":"Changelog","previous_headings":"","what":"boundr v0.3.5 (June 24, 2023)","title":"boundr v0.3.5 (June 24, 2023)","text":"work improve handling MSOA queries Create points() function handle centroids queries neatly Update package internal data (mirror ONS API schema)","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/news/index.html","id":"boundr-v034-as-at-may-3-2023","dir":"Changelog","previous_headings":"","what":"boundr v0.3.4 (as at May 3, 2023)","title":"boundr v0.3.4 (as at May 3, 2023)","text":"Deleted tests useless. start scratch. Added add_bounds_to_table() function - already lookup table just want add geo data . uses lefthandmost column source geometry codes, just fail - ’s user sort . version adds centroid support fixes MSOA-LSOA-MSOA round trip hack opengeo_schema internal data object refreshed can’t remember happened 0.3.3","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/news/index.html","id":"boundr-v032-february-25-2023","dir":"Changelog","previous_headings":"","what":"boundr v0.3.2 (February 25, 2023)","title":"boundr v0.3.2 (February 25, 2023)","text":"lot intervals working much, finally pushed lot work new style. package now named boundr work done main branch. Functions now better documented core workflow quite nice now. Basic tests written tests core behaviours need written still. TODO: Make centroid queries eg MSOA centroids work","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/news/index.html","id":"boundr-v030-january-18-2022","dir":"Changelog","previous_headings":"","what":"boundr v0.3.0 (January 18, 2022)","title":"boundr v0.3.0 (January 18, 2022)","text":"Rebuilt whole program around schema approach (git branch: schema) ’s rough sort works now. TODO: Make MSOA queries work (supported ONS lookups) TODO: Function documentation TODO: Testing undoubtedly fixes","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/news/index.html","id":"boundr-v0220-november-30-2021","dir":"Changelog","previous_headings":"","what":"boundr v0.2.20 (November 30, 2021)","title":"boundr v0.2.20 (November 30, 2021)","text":"Updates API addresses, mostly relating area codes moving 2021 codes used package doc file %>% imports, removed pipe.Rd etc Still bugs need fixing TODO need write tests! TODO build local copy whole API schema work way querying rather manually updating URLs codes","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/news/index.html","id":"boundr-v0216","dir":"Changelog","previous_headings":"","what":"boundr v0.2.16","title":"boundr v0.2.16","text":"Simplifies treat_results routine use oa_lad21_lookup custom lookup","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/news/index.html","id":"boundr-v0215","dir":"Changelog","previous_headings":"","what":"boundr v0.2.15","title":"boundr v0.2.15","text":"Fixes internal data issue datasets weren’t found Adds internal datasets internal package data Upgrades LAD boundaries query 2021 boundaries Simplifies LSOA:MSOA lookup using internal data HoCL names CSV","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/news/index.html","id":"boundr-v0213","dir":"Changelog","previous_headings":"","what":"boundr v0.2.13","title":"boundr v0.2.13","text":"Fixes bug within_cd return_style = minimal – non-functional combination – allowed . Fixes earlier mistake thought API URLs “FeatureServer” now - centroid queries still need “MapServer”.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/news/index.html","id":"boundr-v0212","dir":"Changelog","previous_headings":"","what":"boundr v0.2.12","title":"boundr v0.2.12","text":"Enables population-weighted centroid queries OA LSOA well MSOA now Fixes OA:LAD queries returning wards intermediate levels instead MSOAs","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/news/index.html","id":"boundr-v0211","dir":"Changelog","previous_headings":"","what":"boundr v0.2.11","title":"boundr v0.2.11","text":"Removes returnGeometry option previously added, seemingly causing problem centroid retrieval? don’t think really needed anyway","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/news/index.html","id":"boundr-v0210","dir":"Changelog","previous_headings":"","what":"boundr v0.2.10","title":"boundr v0.2.10","text":"adds ability retrieve lookups geometries single level, .e. bounds_level within_level .","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/news/index.html","id":"boundr-v0295","dir":"Changelog","previous_headings":"","what":"boundr v0.2.9.5","title":"boundr v0.2.9.5","text":"tweaks make within_cd parameter actually work (don’t think tested properly ). tweaks query URL string built, replacing %3D plain =. attempt simplify error-hunting. worried may work endpoints. tweaking get OA:WD lookup work. changes extract_lookup function previous pluck call always work. New combination pluck map_df hopefully work OK. , worried may break things previously working. proper tests place, using git branches test things ’m sure …","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/news/index.html","id":"boundr-v0294","dir":"Changelog","previous_headings":"","what":"boundr v0.2.9.4","title":"boundr v0.2.9.4","text":"Added result_type parameter build_api_query noticed queries weren’t working properly. Turned lookups 2000 results truncated. way fix (see examples six seven) specify resultType \"standard\" allows responses 32,000 long. jogger’s spatial queries already batched batches 25/50 didn’t come issue.","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/news/index.html","id":"boundr-v0293","dir":"Changelog","previous_headings":"","what":"boundr v0.2.9.3","title":"boundr v0.2.9.3","text":"build_api tweaks","code":""},{"path":"https://francisbarton.codeberg.page/boundr/docs/news/index.html","id":"boundr-v0292","dir":"Changelog","previous_headings":"","what":"boundr v0.2.9.2","title":"boundr v0.2.9.2","text":"update fix examples update re-knit README.Rmd","code":""}]
