% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_geometry_to_table.R
\name{add_geometry_to_table}
\alias{add_geometry_to_table}
\alias{add_geometry}
\title{Use an existing tibble as the basis for a spatial query}
\usage{
add_geometry_to_table(
  tbl,
  opts = boundr_options(),
  geometry = c("boundaries", "centroids")
)

add_geometry(
  tbl,
  opts = boundr_options(),
  geometry = c("boundaries", "centroids")
)
}
\arguments{
\item{tbl}{A tibble with a column containing ONS geographical codes.}

\item{opts}{Should be set with the \code{boundr_options()} function. See
\code{?boundr_options} for detail on what can be set by the user, and on the
default values.}

\item{geometry}{character. Two options: "boundaries" (the default) and
"centroids". By default, \code{bounds()} will return area boundaries. Set this
explicitly to "centroids" to get area centroids instead.}
}
\value{
If successful, will return the initial table with an additional
geometry column added. Duplicate rows will be removed.
tibble::tibble(wd23cd = c("S13003001", "N08000520", "W05001522")) |>
add_geometry_to_table(geo_code_field = "wd23cd")
}
\description{
If you have a tibble such as those produced by \code{lookup()} - that is, there is
a column of geographical ONS codes ending in 'cd' - simply use this table as
the basis for retrieving the relevant boundaries or centroids.
}
